name: short-read-mngs viral benchmarks

on:
  push

env:
  LC_ALL: C.UTF-8
  LANG: C.UTF-8
  DEBIAN_FRONTEND: noninteractive

jobs:

  run-samples:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        sample: [idseq_bench_3, idseq_bench_5]
        settings: [default]
    steps:
      - uses: actions/checkout@v2
      - name: docker build
        run: |
            echo "${{ secrets.GITHUB_TOKEN }}" \
                | docker login docker.pkg.github.com --username $(dirname $GITHUB_REPOSITORY) --password-stdin
            IMAGE_NAME=idseq-short-read-mngs-public
            IMAGE_URI="docker.pkg.github.com/${GITHUB_REPOSITORY}/${IMAGE_NAME}"
            CACHE_FROM=""; docker pull "$IMAGE_URI" && CACHE_FROM="--cache-from $IMAGE_URI"
            docker build short-read-mngs --tag idseq-short-read-mngs $CACHE_FROM \
                || docker build short-read-mngs --tag idseq-short-read-mngs
      - name: run sample
        run: |
          pip install -r requirements-dev.txt

          export PATH=$PATH:$HOME/.local/bin
          export MINIWDL__DOWNLOAD_CACHE__GET=true
          export MINIWDL__DOWNLOAD_CACHE__PUT=true
          export MINIWDL__DOWNLOAD_CACHE__DIR="$(mktemp -d --tmpdir miniwdl_download_cache_XXXXXX)"
          # configure miniwdl to auto-delete task working directories, to reduce chance of worker
          # running out of space
          export MINIWDL__FILE_IO__OUTPUT_HARDLINKS=true
          export MINIWDL__FILE_IO__DELETE_WORK=success
          # explicitly block EC2 IMDS endpoint to work around awscli issue:
          # https://github.com/aws/aws-cli/issues/5234#issuecomment-635459464
          # https://github.com/aws/aws-cli/issues/5262
          sudo ip route add blackhole 169.254.169.254

          tests/short-read-mngs/benchmark/run_local.py --dir testrun/ --docker-image-id idseq-short-read-mngs \
            --settings ${{ matrix.settings }} ${{ matrix.sample }}
      - name: harvest output statistics
        run: |
          export PATH=$PATH:$HOME/.local/bin
          taxadb download -o taxadb --type taxa
          taxadb create -i taxadb --dbname taxadb.sqlite
          tests/short-read-mngs/benchmark/harvest.py ${{ matrix.sample }}=testrun/${{ matrix.sample }} \
            --taxadb taxadb.sqlite > ${{ matrix.sample }}.${{ matrix.settings }}_viral.json
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.sample }}.${{ matrix.settings }}_viral.json
          path: ${{ matrix.sample }}.${{ matrix.settings }}_viral.json
