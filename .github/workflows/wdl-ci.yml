name: WDL CI

on:
  push

env:
  LC_ALL: C.UTF-8
  LANG: C.UTF-8
  DEBIAN_FRONTEND: noninteractive

jobs:
  linters:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.cache
          key: ${{runner.os}}-cache
      - name: dependencies
        run: |
          source /etc/profile
          sudo apt-get -qq update
          sudo apt-get -qq install --yes jq moreutils make virtualenv zip unzip httpie git shellcheck
          virtualenv --python=python3.6 .venv
          source .venv/bin/activate
          pip install -r requirements-dev.txt
      - name: linters
        run: |
          source .venv/bin/activate
          make lint
  wdl-ci:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        workflow_dir: [main, consensus-genome]
    steps:
      - uses: actions/checkout@v2
      - name: docker login
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" \
            | docker login docker.pkg.github.com --username $(dirname $GITHUB_REPOSITORY) --password-stdin
      - name: docker build
        run: |
          TAG=$(git describe --long --tags --always --dirty)
          IMAGE_NAME=idseq-${{ matrix.workflow_dir }}-public
          IMAGE_URI="docker.pkg.github.com/${GITHUB_REPOSITORY}/${IMAGE_NAME}"

          CACHE_FROM=""; docker pull "$IMAGE_URI" && CACHE_FROM="--cache-from $IMAGE_URI"
          docker build "${{ matrix.workflow_dir }}" --tag "${IMAGE_URI}:${TAG}" $CACHE_FROM \
            || docker build "${{ matrix.workflow_dir }}" --tag "${IMAGE_URI}:${TAG}"
          docker push "${IMAGE_URI}:${TAG}"
          if [[ ${GITHUB_REF##*/} == "main" ]]; then
            docker tag "${IMAGE_URI}:${TAG}" "${IMAGE_URI}:latest"
            docker push "${IMAGE_URI}:latest"
          fi

          echo "::set-env name=IMAGE_URI::${IMAGE_URI}"
          echo "::set-env name=TAG::${TAG}"
      - name: run tests
        run: |
          source /etc/profile
          sudo apt-get -qq update
          sudo apt-get -qq install --yes jq moreutils make virtualenv zip unzip httpie git shellcheck
          virtualenv --python=python3.6 .venv
          source .venv/bin/activate
          pip install -r requirements-dev.txt
          export DOCKER_IMAGE_ID="${IMAGE_URI}:${TAG}"
          make test-${{ matrix.workflow_dir }}
